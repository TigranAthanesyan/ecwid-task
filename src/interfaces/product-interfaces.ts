import type { IBorderInfo } from "./global-interfaces";

interface ITax {
	taxable: boolean;
	defaultLocationIncludedTaxRate: number;
	enabledManualTaxes: any[];
	taxClassCode: string;
}
  
interface ILowestPriceSettings {
	lowestPriceEnabled: boolean;
}
  
interface IShipping {
	type: string;
	methodMarkup: number;
	flatRate: number;
	disabledMethods: any[];
	enabledMethods: any[];
}
  
interface IOriginalImage {
	url: string;
	width: number;
	height: number;
}
  
interface IGalleryImage {
	id: number;
	url: string;
	thumbnail: string;
	originalImageUrl: string;
	imageUrl: string;
	hdThumbnailUrl: string;
	thumbnailUrl: string;
	smallThumbnailUrl: string;
	width: number;
	height: number;
	orderBy: number;
	borderInfo: IBorderInfo;
}
  
interface IMediaImage {
	id: string;
	isMain: boolean;
	orderBy: number;
	image160pxUrl: string;
	image400pxUrl: string;
	image800pxUrl: string;
	image1500pxUrl: string;
	imageOriginalUrl: string;
}
  
interface IMedia {
	images: IMediaImage[];
	videos: any[];
}
  
interface ICategoryInfo {
	id: number;
	enabled: boolean;
}
  
interface IRelatedCategory {
	enabled: boolean;
	categoryId: number;
	productCount: number;
}
  
interface IRelatedProducts {
	productIds: number[];
	relatedCategory: IRelatedCategory;
}
  
interface IDimensions {
	length: number;
	width: number;
	height: number;
}

export interface IProduct {
	id: number;
	sku: string;
	thumbnailUrl: string;
	unlimited: boolean;
	inStock: boolean;
	name: string;
	price: number;
	priceInProductList: number;
	defaultDisplayedPrice: number;
	defaultDisplayedPriceFormatted: string;
	tax: ITax;
	lowestPriceSettings: ILowestPriceSettings;
	isShippingRequired: boolean;
	hasFreeShipping: boolean;
	url: string;
	autogeneratedSlug: string;
	customSlug: string;
	created: string;
	updated: string;
	createTimestamp: number;
	updateTimestamp: number;
	productClassId: number;
	enabled: boolean;
	options: any[];
	fixedShippingRateOnly: boolean;
	fixedShippingRate: number;
	shipping: IShipping;
	defaultCombinationId: number;
	imageUrl: string;
	smallThumbnailUrl: string;
	hdThumbnailUrl: string;
	originalImageUrl: string;
	originalImage: IOriginalImage;
	borderInfo: IBorderInfo;
	description: string;
	galleryImages: IGalleryImage[];
	media: IMedia;
	categoryIds: number[];
	categories: ICategoryInfo[];
	defaultCategoryId: number;
	seoTitle: string;
	seoDescription: string;
	attributes: any[];
	relatedProducts: IRelatedProducts;
	combinations: any[];
	dimensions: IDimensions;
	volume: number;
	showOnFrontpage: number;
	isSampleProduct: boolean;
	googleItemCondition: string;
	isGiftCard: boolean;
	discountsAllowed: boolean;
	nameYourPriceEnabled: boolean;
}
  
export interface IProductsDTO {
	total: number;
	count: number;
	offset: number;
	limit: number;
	items: IProduct[];
}